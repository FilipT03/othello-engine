MASK = (
(0x0000000000000001,0x0000000000000002,0x0000000000000004,0x0000000000000008,0x0000000000000010,0x0000000000000020,0x0000000000000040,0x0000000000000080),
(0x0000000000000100,0x0000000000000200,0x0000000000000400,0x0000000000000800,0x0000000000001000,0x0000000000002000,0x0000000000004000,0x0000000000008000),
(0x0000000000010000,0x0000000000020000,0x0000000000040000,0x0000000000080000,0x0000000000100000,0x0000000000200000,0x0000000000400000,0x0000000000800000),
(0x0000000001000000,0x0000000002000000,0x0000000004000000,0x0000000008000000,0x0000000010000000,0x0000000020000000,0x0000000040000000,0x0000000080000000),
(0x0000000100000000,0x0000000200000000,0x0000000400000000,0x0000000800000000,0x0000001000000000,0x0000002000000000,0x0000004000000000,0x0000008000000000),
(0x0000010000000000,0x0000020000000000,0x0000040000000000,0x0000080000000000,0x0000100000000000,0x0000200000000000,0x0000400000000000,0x0000800000000000),
(0x0001000000000000,0x0002000000000000,0x0004000000000000,0x0008000000000000,0x0010000000000000,0x0020000000000000,0x0040000000000000,0x0080000000000000),
(0x0100000000000000,0x0200000000000000,0x0400000000000000,0x0800000000000000,0x1000000000000000,0x2000000000000000,0x4000000000000000,0x8000000000000000)
)

EMPTY_VALUE = 0
BLACK_VALUE = 1
WHITE_VALUE = 2

# Returns occupied, colors
def to_numbers(matrix) -> tuple:
    occupied = 0
    colors = 0
    for i in range(8):
        for j in range(8):
            if matrix[i][j] == BLACK_VALUE:
                occupied |= MASK[i][j]
            elif matrix[i][j] == WHITE_VALUE:
                occupied |= MASK[i][j]
                colors |= MASK[i][j]
    
    return occupied, colors

def to_matrix(occupied, colors) -> list:
    matrix = [[EMPTY_VALUE for _ in range(8)] for _ in range(8)]
    for i in range(8):
        for j in range(8):
            if occupied & MASK[i][j]:
                matrix[i][j] = WHITE_VALUE if (colors & MASK[i][j]) else BLACK_VALUE
    return matrix

# Parses only one number to matrix made from 0 and 1
def to_matrix_single(number) -> list:
    matrix = [[0 for _ in range(8)] for _ in range(8)]
    for i in range(8):
        for j in range(8):
            matrix[i][j] = 1 if (number & MASK[i][j]) else 0
    return matrix
